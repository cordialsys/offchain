// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

// Defines values for OperationStatus.
const (
	Failed  OperationStatus = "failed"
	Pending OperationStatus = "pending"
	Success OperationStatus = "success"
)

// AccountType defines model for AccountType.
type AccountType struct {
	// Aliases Aliases for the account type, e.g. `funding`, `trading`.
	Aliases     []string `json:"aliases"`
	Description *string  `json:"description,omitempty"`

	// Type The account type used by the exchange, if account types are used.  E.g. "ISOLATED_MARGIN" or "trading".  An alias for the account type may also be used.
	//
	// See `/exchanges/{exchange}/account-types` endpoint.
	//
	// By default, the first account type will be used.
	Type AccountTypeID `json:"type"`
}

// AccountTypeID The account type used by the exchange, if account types are used.  E.g. "ISOLATED_MARGIN" or "trading".  An alias for the account type may also be used.
//
// See `/exchanges/{exchange}/account-types` endpoint.
//
// By default, the first account type will be used.
type AccountTypeID = string

// Asset defines model for Asset.
type Asset struct {
	// Name The Cordial Systems "universal" name for an asset (instead of specifying exchange-specific `symbol`, `network`).
	Name *AssetName `json:"name,omitempty"`

	// Network Symbol for the network/blockchain that the asset is on, used by the exchange.
	Network string `json:"network"`

	// Symbol Symbol used by the exchanged.
	Symbol string `json:"symbol"`
}

// AssetName The Cordial Systems "universal" name for an asset (instead of specifying exchange-specific `symbol`, `network`).
type AssetName = string

// Balance Balance of an asset on an exchange.  Some of the balance could be unavailable, due to open orders or used in staking.
type Balance struct {
	// Available Decimal formatted string.
	Available Decimal `json:"Available"`

	// Unavailable Decimal formatted string.
	Unavailable Decimal `json:"Unavailable"`

	// Asset The Cordial Systems "universal" name for an asset (instead of specifying exchange-specific `symbol`, `network`).
	Asset   *AssetName `json:"asset,omitempty"`
	Network string     `json:"network"`
	Symbol  string     `json:"symbol"`
}

// Decimal Decimal formatted string.
type Decimal = string

// HistoricalWithdrawal defines model for HistoricalWithdrawal.
type HistoricalWithdrawal struct {
	Amount string `json:"amount"`

	// Asset The Cordial Systems "universal" name for an asset (instead of specifying exchange-specific `symbol`, `network`).
	Asset *AssetName `json:"asset,omitempty"`

	// Comment Comment by the exchange on the status of the withdrawal.
	Comment *string `json:"comment,omitempty"`
	Fee     *string `json:"fee,omitempty"`

	// Id ID by the exchange for the withdrawal
	Id      string `json:"id"`
	Network string `json:"network"`

	// Notes Other exchange-specific metadata about the withdrawal.
	Notes  *map[string]string `json:"notes,omitempty"`
	Status string             `json:"status"`
	Symbol string             `json:"symbol"`

	// TransactionId Transaction ID (or "transaction hash") is the blockchain ID that can be used to view the movement on an explorer.
	TransactionId *string `json:"transaction_id,omitempty"`
}

// OperationStatus Status of an upstream operation.
type OperationStatus string

// SubAccountHeader defines model for SubAccountHeader.
type SubAccountHeader struct {
	// Alias Configured alias for the sub-account.
	Alias *string `json:"alias,omitempty"`

	// Id ID used by the exchange for the sub-account.
	Id string `json:"id"`
}

// Transfer defines model for Transfer.
type Transfer struct {
	// Amount Decimal formatted string.
	Amount Decimal `json:"amount"`

	// Asset The Cordial Systems "universal" name for an asset (instead of specifying exchange-specific `symbol`, `network`).
	Asset *AssetName `json:"asset,omitempty"`

	// From ID or alias of the account to send from.  By default it uses the account that this request is being executed on.
	From *string `json:"from,omitempty"`

	// FromType The account type used by the exchange, if account types are used.  E.g. "ISOLATED_MARGIN" or "trading".  An alias for the account type may also be used.
	//
	// See `/exchanges/{exchange}/account-types` endpoint.
	//
	// By default, the first account type will be used.
	FromType *AccountTypeID `json:"from_type,omitempty"`
	Symbol   *string        `json:"symbol,omitempty"`

	// To The ID or alias of the account to transfer the funds into.
	// If omitted, it will default to the account this is executing on.
	To *string `json:"to,omitempty"`

	// ToType The account type used by the exchange, if account types are used.  E.g. "ISOLATED_MARGIN" or "trading".  An alias for the account type may also be used.
	//
	// See `/exchanges/{exchange}/account-types` endpoint.
	//
	// By default, the first account type will be used.
	ToType *AccountTypeID `json:"to_type,omitempty"`
}

// TransferResponse Exchange response to an internal account transfer.
type TransferResponse struct {
	// Id Exchange ID of the internal account transfer.
	Id string `json:"id"`

	// Status Status of an upstream operation.
	Status OperationStatus `json:"status"`
}

// Withdrawal defines model for Withdrawal.
type Withdrawal struct {
	Address string `json:"address"`

	// Amount Decimal-string amount to withdraw
	Amount string `json:"amount"`

	// Asset The Cordial Systems "universal" name for an asset (instead of specifying exchange-specific `symbol`, `network`).
	Asset   *AssetName `json:"asset,omitempty"`
	Network *string    `json:"network,omitempty"`
	Symbol  *string    `json:"symbol,omitempty"`
}

// WithdrawalResponse defines model for WithdrawalResponse.
type WithdrawalResponse struct {
	Id string `json:"id"`

	// Status Status of an upstream operation.
	Status OperationStatus `json:"status"`
}

// SubAccount defines model for sub-account.
type SubAccount = string

// ListAllBalancesParams defines parameters for ListAllBalances.
type ListAllBalancesParams struct {
	// SubAccount Optionally specify a sub-account to execute this request on.  May specify the ID or alias for the sub-account.
	SubAccount *SubAccount `form:"sub-account,omitempty" json:"sub-account,omitempty"`
}

// GetDepositAddressParams defines parameters for GetDepositAddress.
type GetDepositAddressParams struct {
	// SubAccount Optionally specify a sub-account to execute this request on.  May specify the ID or alias for the sub-account.
	SubAccount *SubAccount `form:"sub-account,omitempty" json:"sub-account,omitempty"`

	// Symbol Symbol used by the exchange for the asset.
	Symbol *string `form:"symbol,omitempty" json:"symbol,omitempty"`

	// Network Network used by the exchange for the asset.
	Network *string `form:"network,omitempty" json:"network,omitempty"`

	// Asset Cordial Systems universal asset name.
	Asset *string `form:"asset,omitempty" json:"asset,omitempty"`
}

// CreateTransferParams defines parameters for CreateTransfer.
type CreateTransferParams struct {
	// SubAccount Optionally specify a sub-account to execute this request on.  May specify the ID or alias for the sub-account.
	SubAccount *SubAccount `form:"sub-account,omitempty" json:"sub-account,omitempty"`
}

// ListWithdrawalsParams defines parameters for ListWithdrawals.
type ListWithdrawalsParams struct {
	// SubAccount Optionally specify a sub-account to execute this request on.  May specify the ID or alias for the sub-account.
	SubAccount *SubAccount `form:"sub-account,omitempty" json:"sub-account,omitempty"`
}

// CreateWithdrawalParams defines parameters for CreateWithdrawal.
type CreateWithdrawalParams struct {
	// SubAccount Optionally specify a sub-account to execute this request on.  May specify the ID or alias for the sub-account.
	SubAccount *SubAccount `form:"sub-account,omitempty" json:"sub-account,omitempty"`
}

// CreateTransferJSONRequestBody defines body for CreateTransfer for application/json ContentType.
type CreateTransferJSONRequestBody = Transfer

// CreateWithdrawalJSONRequestBody defines body for CreateWithdrawal for application/json ContentType.
type CreateWithdrawalJSONRequestBody = Withdrawal
